{"version":3,"file":"static/js/602.65c0b778.chunk.js","mappings":"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","sources":["webpack://react-test-1/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__7Hmvy\",\"dialogsItems\":\"Dialogs_dialogsItems__PCxFJ\",\"active\":\"Dialogs_active__Ugg3u\",\"dialog\":\"Dialogs_dialog__mg5cf\",\"messages\":\"Dialogs_messages__YwRox\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3Igpp7PiR9AMDmdWmBWBp6r5AIxq-fL29OQ&usqp=CAU' />\n            <NavLink to={path}> {props.name} </NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem","import React from 'react';\nimport s from './../Dialogs.module.css';\n\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3Igpp7PiR9AMDmdWmBWBp6r5AIxq-fL29OQ&usqp=CAU' />\n            {props.message}\n            </div>\n    )\n}\n\nexport default Message","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../Common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/Validators/validators';\n\nconst maxLength100 = maxLengthCreator(100)\n\nconst SendMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} >\n            <div>\n                <Field placeholder='Enter your message'\n                    name={\"newMessageBody\"}\n                    component={Textarea}\n                    validate = {[required,maxLength100]}\n                />\n            </div>\n            <div> <button >Send</button> </div>\n        </form>\n    )\n}\n\nconst SendMessageReduxForm = reduxForm({ form: \"dialogAddMessageForm\" })(SendMessageForm)\n\nconst Dialogs = (props) => {\n\n    const addNewMessage = (formData) => {\n        props.sendNewMessage(formData.newMessageBody)\n        formData.newMessageBody = \"\"\n        console.log(formData)\n    }\n\n    let dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\n    let messagesElements = props.state.messages.map(m => <Message message={m.message} key={m.id} />)\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div className={s.messagesElements}>  {messagesElements}\n                </div>\n                <SendMessageReduxForm onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs ","import { compose } from 'redux';\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { sendNewMessage } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.dialogsPage,\n    };\n}\n\nexport default compose(\n    connect(mapStateToProps, { sendNewMessage }),\n    WithAuthRedirect)(Dialogs) ","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from \"react-router-dom\"\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const WithAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth)\n                return <Navigate to=\"/login\" />;\n\n            return (<Component {...this.props} />)\n\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}\n"],"names":["props","path","id","_jsxs","className","s","dialog","active","children","_jsx","src","NavLink","to","name","message","maxLength100","maxLengthCreator","SendMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","dialogsElements","state","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","dialogsItems","formData","sendNewMessage","newMessageBody","console","log","compose","connect","dialogsPage","WithAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React"],"sourceRoot":""}